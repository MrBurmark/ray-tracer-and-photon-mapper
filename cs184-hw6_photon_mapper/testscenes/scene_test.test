# Test Scene 3
# Intended to show transforms
# I know it's not the most exciting of scenes...

size 1920 1200 

output scene4_test.bmp

//SSAA 4

maxthreads 7

maxdepth 8
maxinternaldepth 2

camera 0 -5 8  0 0 0  0 1 1  20

point 1 1 3  1 1 1

ambient 0 0 0
emission 0 0 0



maxverts 8

vertex -1 -1 -1
vertex +1 -1 -1 
vertex +1 +1 -1 
vertex -1 +1 -1 
vertex -1 -1 +1
vertex +1 -1 +1 
vertex +1 +1 +1
vertex -1 +1 +1

pushTransform
# The basic camera transform to return to for new parts

# The actual cube definition.  Since no instancing is supported, I will just 
# repeat this to create many cubes.  For extra credit, you can implement 
# instancing to make this simpler.  Alternatively, define a ray-cube 
# intersection test.

index 1
alpha 1
shininess 5

specular .6 .6 .5
diffuse .7 .7 1

scale 2 1 .25
tri 0 1 5 
tri 0 5 4 
tri 3 7 6
tri 3 6 2
tri 1 2 6
tri 1 6 5 
tri 0 7 3 
tri 0 4 7 
tri 0 3 2 
tri 0 2 1
tri 4 5 6 
tri 4 6 7 

popTransform

# Now draw the spheres

alpha 0
index 1.3
shininess 20

specular 0 0.7 0 
diffuse 0 1 0 

pushTransform 
	translate  0 0 0.5
	rotate 0 0 1 45
	scale 1.0 0.25 0.25 
	sphere 0 0 0 1
popTransform


specular 0.7 0 0
diffuse 1 0 0

pushTransform 
	translate  0 0 0.5
	rotate 0 0 1 -45
	scale 1.0 0.25 0.25 
	sphere 0 0 0 1
popTransform


specular 0 0.7 0.7
diffuse 0 1 1 

pushTransform
	translate -1.5 -.8 0.65
	scale 0.4 0.4 0.4
	sphere 0 0 0 1
popTransform

pushTransform
	translate 1.5 -.8 0.65
	scale 0.4 0.4 0.4
	sphere 0 0 0 1
popTransform

pushTransform
	translate 1.5 .8 0.65
	scale 0.4 0.4 0.4
	sphere 0 0 0 1
popTransform

pushTransform
	translate -1.5 .8 0.65
	scale 0.4 0.4 0.4
	sphere 0 0 0 1
popTransform


specular 0 0 0
diffuse 1 1 1 

pushTransform
	translate 0 -2 3.2
	rotate 1 0 0  30
	scale 0.75 0.75 0.1
	sphere 0 0 0 1
popTransform
